"""
    Precisely APIs

    Enhance & enrich your data, applications, business processes, and workflows with rich location, information, and identify APIs.  # noqa: E501

    The version of the OpenAPI document: 11.9.4
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from com.precisely.apis.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
    OpenApiModel
)
from com.precisely.apis.exceptions import ApiAttributeError



class ValidateMailingAddressUSCANAPIOptions(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
    }

    @cached_property
    def additional_properties_type():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded
        """
        return (bool, date, datetime, dict, float, int, list, str, none_type,)  # noqa: E501

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        return {
            'output_address_blocks': (str,),  # noqa: E501
            'perform_us_processing': (str,),  # noqa: E501
            'perform_dpv': (str,),  # noqa: E501
            'output_formatted_on_fail': (str,),  # noqa: E501
            'output_postal_code_separator': (str,),  # noqa: E501
            'output_country_format': (str,),  # noqa: E501
            'keep_multimatch': (str,),  # noqa: E501
            'output_casing': (str,),  # noqa: E501
            'maximum_results': (str,),  # noqa: E501
            'output_record_type': (str,),  # noqa: E501
            'output_field_level_return_codes': (str,),  # noqa: E501
            'dpv_determine_no_stat': (str,),  # noqa: E501
            'street_matching_strictness': (str,),  # noqa: E501
            'can_french_apartment_label': (str,),  # noqa: E501
            'output_abbreviated_alias': (str,),  # noqa: E501
            'dpv_successful_status_condition': (str,),  # noqa: E501
            'standard_address_pmb_line': (str,),  # noqa: E501
            'firm_matching_strictness': (str,),  # noqa: E501
            'can_rural_route_format': (str,),  # noqa: E501
            'can_prefer_house_num': (str,),  # noqa: E501
            'output_preferred_alias': (str,),  # noqa: E501
            'directional_matching_strictness': (str,),  # noqa: E501
            'extract_firm': (str,),  # noqa: E501
            'fail_on_cmra_match': (str,),  # noqa: E501
            'can_non_civic_format': (str,),  # noqa: E501
            'can_sslvr_flg': (str,),  # noqa: E501
            'output_street_name_alias': (str,),  # noqa: E501
            'perform_ews': (str,),  # noqa: E501
            'can_output_city_format': (str,),  # noqa: E501
            'dual_address_logic': (str,),  # noqa: E501
            'perform_suite_link': (str,),  # noqa: E501
            'can_standard_address_format': (str,),  # noqa: E501
            'output_preferred_city': (str,),  # noqa: E501
            'output_multinational_characters': (str,),  # noqa: E501
            'can_delivery_office_format': (str,),  # noqa: E501
            'perform_lacs_link': (str,),  # noqa: E501
            'can_dual_address_logic': (str,),  # noqa: E501
            'extract_urb': (str,),  # noqa: E501
            'standard_address_format': (str,),  # noqa: E501
            'can_french_format': (str,),  # noqa: E501
            'dpv_determine_vacancy': (str,),  # noqa: E501
            'can_english_apartment_label': (str,),  # noqa: E501
            'suppress_zplus_phantom_carrier_r777': (str,),  # noqa: E501
            'can_output_city_alias': (str,),  # noqa: E501
            'output_short_city_name': (str,),  # noqa: E501
        }

    @cached_property
    def discriminator():
        return None


    attribute_map = {
        'output_address_blocks': 'OutputAddressBlocks',  # noqa: E501
        'perform_us_processing': 'PerformUSProcessing',  # noqa: E501
        'perform_dpv': 'PerformDPV',  # noqa: E501
        'output_formatted_on_fail': 'OutputFormattedOnFail',  # noqa: E501
        'output_postal_code_separator': 'OutputPostalCodeSeparator',  # noqa: E501
        'output_country_format': 'OutputCountryFormat',  # noqa: E501
        'keep_multimatch': 'KeepMultimatch',  # noqa: E501
        'output_casing': 'OutputCasing',  # noqa: E501
        'maximum_results': 'MaximumResults',  # noqa: E501
        'output_record_type': 'OutputRecordType',  # noqa: E501
        'output_field_level_return_codes': 'OutputFieldLevelReturnCodes',  # noqa: E501
        'dpv_determine_no_stat': 'DPVDetermineNoStat',  # noqa: E501
        'street_matching_strictness': 'StreetMatchingStrictness',  # noqa: E501
        'can_french_apartment_label': 'CanFrenchApartmentLabel',  # noqa: E501
        'output_abbreviated_alias': 'OutputAbbreviatedAlias',  # noqa: E501
        'dpv_successful_status_condition': 'DPVSuccessfulStatusCondition',  # noqa: E501
        'standard_address_pmb_line': 'StandardAddressPMBLine',  # noqa: E501
        'firm_matching_strictness': 'FirmMatchingStrictness',  # noqa: E501
        'can_rural_route_format': 'CanRuralRouteFormat',  # noqa: E501
        'can_prefer_house_num': 'CanPreferHouseNum',  # noqa: E501
        'output_preferred_alias': 'OutputPreferredAlias',  # noqa: E501
        'directional_matching_strictness': 'DirectionalMatchingStrictness',  # noqa: E501
        'extract_firm': 'ExtractFirm',  # noqa: E501
        'fail_on_cmra_match': 'FailOnCMRAMatch',  # noqa: E501
        'can_non_civic_format': 'CanNonCivicFormat',  # noqa: E501
        'can_sslvr_flg': 'CanSSLVRFlg',  # noqa: E501
        'output_street_name_alias': 'OutputStreetNameAlias',  # noqa: E501
        'perform_ews': 'PerformEWS',  # noqa: E501
        'can_output_city_format': 'CanOutputCityFormat',  # noqa: E501
        'dual_address_logic': 'DualAddressLogic',  # noqa: E501
        'perform_suite_link': 'PerformSuiteLink',  # noqa: E501
        'can_standard_address_format': 'CanStandardAddressFormat',  # noqa: E501
        'output_preferred_city': 'OutputPreferredCity',  # noqa: E501
        'output_multinational_characters': 'OutputMultinationalCharacters',  # noqa: E501
        'can_delivery_office_format': 'CanDeliveryOfficeFormat',  # noqa: E501
        'perform_lacs_link': 'PerformLACSLink',  # noqa: E501
        'can_dual_address_logic': 'CanDualAddressLogic',  # noqa: E501
        'extract_urb': 'ExtractUrb',  # noqa: E501
        'standard_address_format': 'StandardAddressFormat',  # noqa: E501
        'can_french_format': 'CanFrenchFormat',  # noqa: E501
        'dpv_determine_vacancy': 'DPVDetermineVacancy',  # noqa: E501
        'can_english_apartment_label': 'CanEnglishApartmentLabel',  # noqa: E501
        'suppress_zplus_phantom_carrier_r777': 'SuppressZplusPhantomCarrierR777',  # noqa: E501
        'can_output_city_alias': 'CanOutputCityAlias',  # noqa: E501
        'output_short_city_name': 'OutputShortCityName',  # noqa: E501
    }

    read_only_vars = {
    }

    _composed_schemas = {}

    @classmethod
    @convert_js_args_to_python_args
    def _from_openapi_data(cls, *args, **kwargs):  # noqa: E501
        """ValidateMailingAddressUSCANAPIOptions - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            output_address_blocks (str): Specifies whether to return a formatted version of the address.. [optional] if omitted the server will use the default value of "Y"  # noqa: E501
            perform_us_processing (str): Specifies whether or not to process U.S. addresses.. [optional] if omitted the server will use the default value of "Y"  # noqa: E501
            perform_dpv (str): Delivery Point Validation (DPV®) validates that a specific address exists. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_formatted_on_fail (str): Specifies whether to return a formatted address when an address cannot be validated.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_postal_code_separator (str): Specifies whether to use separators (spaces or hyphens) in ZIP™ Codes or Canadian postal codes.. [optional] if omitted the server will use the default value of "Y"  # noqa: E501
            output_country_format (str): Specifies the format to use for the country name returned in the Country output field.. [optional] if omitted the server will use the default value of "E"  # noqa: E501
            keep_multimatch (str): Indicates whether to return multiple address for input addresses that have more than one possible matches.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_casing (str): Specifies the casing of the output address. M for mixed case and U for upper case.. [optional] if omitted the server will use the default value of "M"  # noqa: E501
            maximum_results (str): Specifies a number between 1 and 10 that indicates the maximum number of addresses to be returned.. [optional] if omitted the server will use the default value of "10"  # noqa: E501
            output_record_type (str): Specifies the type of the output record.. [optional] if omitted the server will use the default value of "A"  # noqa: E501
            output_field_level_return_codes (str): Identifies which output addresses are candidate addresses as value if Y for OutputFieldLevelReturnCodes.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            dpv_determine_no_stat (str): Determines the no stat status of an address which means it exists but cannot receive mails.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            street_matching_strictness (str): Specifies the algorithm to determe if an input address matches in the postal database.. [optional] if omitted the server will use the default value of "M"  # noqa: E501
            can_french_apartment_label (str): Specifies the default apartment label for the output if there is no apartment label in the input address. This is specific to French address. . [optional] if omitted the server will use the default value of "Appartement"  # noqa: E501
            output_abbreviated_alias (str): Specifies whether to use a street's abbreviated alias in the output if the output address line is longer than 31 characters.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            dpv_successful_status_condition (str): Selecting the match condition where a DPV result does NOT cause a record to fail.. [optional] if omitted the server will use the default value of "A"  # noqa: E501
            standard_address_pmb_line (str): Specifies where Private Mailbox (PMB) information is placed.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            firm_matching_strictness (str): Specifies the algorithm to determining if an input address matches in the postal database.. [optional] if omitted the server will use the default value of "M"  # noqa: E501
            can_rural_route_format (str): Specifies where to place rural route delivery information.. [optional] if omitted the server will use the default value of "A"  # noqa: E501
            can_prefer_house_num (str): Specifies whether to select a house number of postal code in case of conflict.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_preferred_alias (str): Specifies whether to use a street's preferred alias in the output.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            directional_matching_strictness (str): Specifies the algorithm to determine if an input address matches in the postal database.. [optional] if omitted the server will use the default value of "M"  # noqa: E501
            extract_firm (str): Specifies whether to extract the firm name from AddressLine1 through AddressLine4 and place it in the FirmName output field.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            fail_on_cmra_match (str): Specifies whether to consider Treat Commercial Mail Receiving Agency (CMRA) matches as failures?. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_non_civic_format (str): Specifies whether or not non-civic keywords are abbreviated in the output. . [optional] if omitted the server will use the default value of "A"  # noqa: E501
            can_sslvr_flg (str): Changes the civic and/or suite information to match the LVR or single-single record.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_street_name_alias (str): Specifies how to handle street name aliases used in the input. This is specific to US.. [optional] if omitted the server will use the default value of "Y"  # noqa: E501
            perform_ews (str): Specifies the Early Warning System (EWS) that uses the USPS EWS File to validate addresses that are not in the ZIP + 4 database.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_output_city_format (str): Specifies whether to use the long, medium, or short version of the city if the city has a long name.. [optional] if omitted the server will use the default value of "D"  # noqa: E501
            dual_address_logic (str): Specifies how to return a match if multiple non-blank address lines are present or multiple address types are on the same address line. (U.S. addresses only.). [optional] if omitted the server will use the default value of "N"  # noqa: E501
            perform_suite_link (str): Specifies whether to perform SuiteLink processing.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_standard_address_format (str): Specifies where to place secondary address information in the output address.. [optional] if omitted the server will use the default value of "D"  # noqa: E501
            output_preferred_city (str): Specifies whether the preferred last line city name should be stored.. [optional] if omitted the server will use the default value of "Z"  # noqa: E501
            output_multinational_characters (str): Specifies whether to return multinational characters, including diacritical marks such as umlauts or accents.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_delivery_office_format (str): Specifies where to place station information.. [optional] if omitted the server will use the default value of "I"  # noqa: E501
            perform_lacs_link (str): Facilitates the conversion of rural route address converting into street-style address using the LACS.. [optional] if omitted the server will use the default value of "Y"  # noqa: E501
            can_dual_address_logic (str): Specifies whether ValidateMailingAddressUSCAN should return a street match or a PO Box/non-civic match when the address contains both civic and non-civic information.. [optional] if omitted the server will use the default value of "D"  # noqa: E501
            extract_urb (str): Specifies whether to extract the urbanization name from AddressLine1 through AddressLine4 and place it in the USUrbanName output field. . [optional] if omitted the server will use the default value of "N"  # noqa: E501
            standard_address_format (str): Specifies where to place secondary address information for U.S. addresses.. [optional] if omitted the server will use the default value of "C"  # noqa: E501
            can_french_format (str): Specifies how to determine the language (English or French) to use to format the address and directional.. [optional] if omitted the server will use the default value of "C"  # noqa: E501
            dpv_determine_vacancy (str): Determines if the location has been unoccupied for at least 90 days.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_english_apartment_label (str): Specifies the default apartment label to use in the output if there is no apartment label in the input address. rhis is specific to English addresses.. [optional] if omitted the server will use the default value of "Apt"  # noqa: E501
            suppress_zplus_phantom_carrier_r777 (str): Specifies whether to supress addresses with Carrier Route R777.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_output_city_alias (str): Specifies whether or not to return the city alias when the alias is in the input address.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_short_city_name (str): Specifies how to format city names that have short city name or non-mailing city name alternatives.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        self = super(OpenApiModel, cls).__new__(cls)

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
        return self

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
    ])

    @convert_js_args_to_python_args
    def __init__(self, *args, **kwargs):  # noqa: E501
        """ValidateMailingAddressUSCANAPIOptions - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            output_address_blocks (str): Specifies whether to return a formatted version of the address.. [optional] if omitted the server will use the default value of "Y"  # noqa: E501
            perform_us_processing (str): Specifies whether or not to process U.S. addresses.. [optional] if omitted the server will use the default value of "Y"  # noqa: E501
            perform_dpv (str): Delivery Point Validation (DPV®) validates that a specific address exists. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_formatted_on_fail (str): Specifies whether to return a formatted address when an address cannot be validated.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_postal_code_separator (str): Specifies whether to use separators (spaces or hyphens) in ZIP™ Codes or Canadian postal codes.. [optional] if omitted the server will use the default value of "Y"  # noqa: E501
            output_country_format (str): Specifies the format to use for the country name returned in the Country output field.. [optional] if omitted the server will use the default value of "E"  # noqa: E501
            keep_multimatch (str): Indicates whether to return multiple address for input addresses that have more than one possible matches.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_casing (str): Specifies the casing of the output address. M for mixed case and U for upper case.. [optional] if omitted the server will use the default value of "M"  # noqa: E501
            maximum_results (str): Specifies a number between 1 and 10 that indicates the maximum number of addresses to be returned.. [optional] if omitted the server will use the default value of "10"  # noqa: E501
            output_record_type (str): Specifies the type of the output record.. [optional] if omitted the server will use the default value of "A"  # noqa: E501
            output_field_level_return_codes (str): Identifies which output addresses are candidate addresses as value if Y for OutputFieldLevelReturnCodes.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            dpv_determine_no_stat (str): Determines the no stat status of an address which means it exists but cannot receive mails.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            street_matching_strictness (str): Specifies the algorithm to determe if an input address matches in the postal database.. [optional] if omitted the server will use the default value of "M"  # noqa: E501
            can_french_apartment_label (str): Specifies the default apartment label for the output if there is no apartment label in the input address. This is specific to French address. . [optional] if omitted the server will use the default value of "Appartement"  # noqa: E501
            output_abbreviated_alias (str): Specifies whether to use a street's abbreviated alias in the output if the output address line is longer than 31 characters.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            dpv_successful_status_condition (str): Selecting the match condition where a DPV result does NOT cause a record to fail.. [optional] if omitted the server will use the default value of "A"  # noqa: E501
            standard_address_pmb_line (str): Specifies where Private Mailbox (PMB) information is placed.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            firm_matching_strictness (str): Specifies the algorithm to determining if an input address matches in the postal database.. [optional] if omitted the server will use the default value of "M"  # noqa: E501
            can_rural_route_format (str): Specifies where to place rural route delivery information.. [optional] if omitted the server will use the default value of "A"  # noqa: E501
            can_prefer_house_num (str): Specifies whether to select a house number of postal code in case of conflict.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_preferred_alias (str): Specifies whether to use a street's preferred alias in the output.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            directional_matching_strictness (str): Specifies the algorithm to determine if an input address matches in the postal database.. [optional] if omitted the server will use the default value of "M"  # noqa: E501
            extract_firm (str): Specifies whether to extract the firm name from AddressLine1 through AddressLine4 and place it in the FirmName output field.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            fail_on_cmra_match (str): Specifies whether to consider Treat Commercial Mail Receiving Agency (CMRA) matches as failures?. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_non_civic_format (str): Specifies whether or not non-civic keywords are abbreviated in the output. . [optional] if omitted the server will use the default value of "A"  # noqa: E501
            can_sslvr_flg (str): Changes the civic and/or suite information to match the LVR or single-single record.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_street_name_alias (str): Specifies how to handle street name aliases used in the input. This is specific to US.. [optional] if omitted the server will use the default value of "Y"  # noqa: E501
            perform_ews (str): Specifies the Early Warning System (EWS) that uses the USPS EWS File to validate addresses that are not in the ZIP + 4 database.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_output_city_format (str): Specifies whether to use the long, medium, or short version of the city if the city has a long name.. [optional] if omitted the server will use the default value of "D"  # noqa: E501
            dual_address_logic (str): Specifies how to return a match if multiple non-blank address lines are present or multiple address types are on the same address line. (U.S. addresses only.). [optional] if omitted the server will use the default value of "N"  # noqa: E501
            perform_suite_link (str): Specifies whether to perform SuiteLink processing.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_standard_address_format (str): Specifies where to place secondary address information in the output address.. [optional] if omitted the server will use the default value of "D"  # noqa: E501
            output_preferred_city (str): Specifies whether the preferred last line city name should be stored.. [optional] if omitted the server will use the default value of "Z"  # noqa: E501
            output_multinational_characters (str): Specifies whether to return multinational characters, including diacritical marks such as umlauts or accents.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_delivery_office_format (str): Specifies where to place station information.. [optional] if omitted the server will use the default value of "I"  # noqa: E501
            perform_lacs_link (str): Facilitates the conversion of rural route address converting into street-style address using the LACS.. [optional] if omitted the server will use the default value of "Y"  # noqa: E501
            can_dual_address_logic (str): Specifies whether ValidateMailingAddressUSCAN should return a street match or a PO Box/non-civic match when the address contains both civic and non-civic information.. [optional] if omitted the server will use the default value of "D"  # noqa: E501
            extract_urb (str): Specifies whether to extract the urbanization name from AddressLine1 through AddressLine4 and place it in the USUrbanName output field. . [optional] if omitted the server will use the default value of "N"  # noqa: E501
            standard_address_format (str): Specifies where to place secondary address information for U.S. addresses.. [optional] if omitted the server will use the default value of "C"  # noqa: E501
            can_french_format (str): Specifies how to determine the language (English or French) to use to format the address and directional.. [optional] if omitted the server will use the default value of "C"  # noqa: E501
            dpv_determine_vacancy (str): Determines if the location has been unoccupied for at least 90 days.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_english_apartment_label (str): Specifies the default apartment label to use in the output if there is no apartment label in the input address. rhis is specific to English addresses.. [optional] if omitted the server will use the default value of "Apt"  # noqa: E501
            suppress_zplus_phantom_carrier_r777 (str): Specifies whether to supress addresses with Carrier Route R777.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            can_output_city_alias (str): Specifies whether or not to return the city alias when the alias is in the input address.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
            output_short_city_name (str): Specifies how to format city names that have short city name or non-mailing city name alternatives.. [optional] if omitted the server will use the default value of "N"  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
            if var_name in self.read_only_vars:
                raise ApiAttributeError(f"`{var_name}` is a read-only attribute. Use `from_openapi_data` to instantiate "
                                     f"class with read only attributes.")
